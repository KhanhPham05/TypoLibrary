plugins {
    id 'net.neoforged.gradle.userdev' version '7.0.64'
}

project.version = modVersion
project.group = buildGroup

base.archivesName = modId

//minecraft.mappings channel: 'parchment', version: '2023.10.08-1.20.2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', modId
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', modId
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', modId
    }

    data {
        programArguments.addAll '--mod', modId, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources.srcDir("src/generated/resources")

dependencies {
    implementation "net.neoforged:neoforge:${neoVersion}"
}

tasks.withType(ProcessResources).configureEach {
    var license = hasProperty("customLicense") ? property("customLicense") : "All Right Reversed"
    var replaceProperties = [
            minecraft_version      : minecraftVersion,
            minecraft_version_range: "[${minecraftVersion}]",
            neo_version            : neoVersion,
            neo_version_range      : neoVersionRange,
            loader_version_range   : "[1,)",
            mod_id                 : modId,
            mod_name               : modName,
            mod_license            : license,
            mod_version            : modVersion,
            mod_authors            : author,
            mod_description        : modDescription,
            pack_format_number     : packFormat,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}